<?phpnamespace App\Http\Controllers\Materiais;use App\Mail\mailTeste;use Carbon\Carbon;use Illuminate\Support\Facades\DB;use Illuminate\Http\Request;use Illuminate\Support\Facades\Log;use Illuminate\Support\Facades\Validator;use App\Http\Controllers\Controller;class Fornecedores extends Controller{    public function __construct(){        $this->middleware('auth');        $this->middleware('configuraSessao');        $this->middleware('requestFilter');    }    public function listar(){        verficaPermissao('recurso.materiais/fornecedores');        $data['headerText'] = 'Fornecedores';        $data['breadcrumbs'][] = ['titulo' => 'Início', 'href' => route('home')];        $data['breadcrumbs'][] = ['titulo' => 'Materiais', 'href' => route('materiais/produtos')];        $data['breadcrumbs'][] = ['titulo' => 'Fornecedores', 'href' => route('materiais/fornecedores/lista')];        if ($_REQUEST) {            $where = [];            if (!empty($_REQUEST['nome'])) {                $where[] = ['p.nm_pessoa', 'like', '%' . strtoupper($_REQUEST['nome']) . '%'];            }            $data['lista'] = DB::table('fornecedores as f')                ->leftJoin('pessoa as p','p.cd_pessoa','=','f.cd_pessoa')                ->where($where)                ->select('f.cd_fornecedor','p.nm_pessoa as nm_fornecedor')                ->orderBy('f.cd_fornecedor')                ->paginate(30)                ->appends($_REQUEST);        }        return view('materiais/fornecedores/lista', $data);    }    public function cadastrar($idFornecedor = null, Request $request){        verficaPermissao('recurso.materiais/fornecedores');        $data['headerText'] = 'Cadastro de Fornecedores';        $data['breadcrumbs'][] = ['titulo' => 'Início', 'href' => route('home')];        $data['breadcrumbs'][] = ['titulo' => 'Materiais', 'href' => route('materiais/fornecedores/lista')];        $data['breadcrumbs'][] = ['titulo' => 'Cadastrar', 'href' => route('materiais/fornecedores/cadastro')];        $data['pj'] = true;        if (!empty($idFornecedor) && empty($_POST['id'])) {            $fornecedor = DB::table('fornecedores as f')                ->leftJoin('pessoa as p','p.cd_pessoa','=','f.cd_pessoa')                ->where('cd_fornecedor', $idFornecedor)                ->select('p.nm_pessoa as nm_fornecedor', 'f.cd_fornecedor','f.cd_pessoa')                ->get();            if (isset($fornecedor[0])) {                $array = (array)$fornecedor[0];                $data['fornecedor'] = $array;            }        } else {            $data['fornecedor'] = $_POST;        }        if ($request->isMethod('post')) {            $dados = $request->except(['_token', 'id','nm_fornecedor']);            $dados['id_user'] = session()->get('id_user');            $dados = array_map('strtoupper', $dados);            $rules = [                'cd_pessoa' => 'required|unique:fornecedores,cd_pessoa,'.$_POST['cd_fornecedor'].',cd_fornecedor',            ];            $validator = Validator::make($dados, $rules);            if ($validator->fails()) {                return view('materiais/fornecedores/cadastro', $data)->withErrors($validator);            } else {                if (!empty($idFornecedor)) {                    DB::table('fornecedores')->where('cd_fornecedor', $idFornecedor)->update(["cd_pessoa"=>$dados['cd_pessoa'],'id_user' => $dados['id_user']]);                } else {                    $dados['created_at'] = Carbon::now();                    DB::table('fornecedores')->insert(["cd_pessoa"=>$dados['cd_pessoa'],'id_user' => $dados['id_user']]);                    $idFornecedor = DB::table('fornecedores')->max('cd_fornecedor');                }                $request->session()->flash('status', 'Salvo com sucesso!');                return redirect('materiais/fornecedores/cadastro/'.$idFornecedor);            }        }        return view('materiais/fornecedores/cadastro', $data);    }    public function remover(){        DB::table('fornecedores')->where('cd_fornecedor', '=', $_POST['id'])->delete();        return redirect($_REQUEST['REFERER']);    }}
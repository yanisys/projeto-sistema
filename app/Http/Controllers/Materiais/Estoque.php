<?phpnamespace App\Http\Controllers\Materiais;use App\Mail\mailTeste;use Carbon\Carbon;use App\Http\Controllers\Controller;use Illuminate\Support\Facades\DB;use Illuminate\Http\Request;use Illuminate\Support\Facades\Validator;use Illuminate\Support\Facades\Log;class Estoque extends Controller{    public function __construct(){        $this->middleware('auth');        $this->middleware('configuraSessao');        $this->middleware('requestFilter');    }    public function listar(){        verficaPermissao('recurso.materiais/estoque');        $data['headerText'] = 'Estoque';        $data['breadcrumbs'][] = ['titulo' => 'Início', 'href' => route('home')];        $data['breadcrumbs'][] = ['titulo' => 'Materiais', 'href' => route('materiais/produtos')];        $data['breadcrumbs'][] = ['titulo' => 'Localização', 'href' => route('materiais/estoque/lista')];        if ($_REQUEST) {            $where = [];            $orWhere = [];            if (!empty($_REQUEST['nm_produto'])) {                $where[] = ['p.nm_produto', 'like', '%'.strtoupper($_REQUEST['nm_produto']).'%'];                $orWhere[] = ['p.ds_produto', 'like', '%'.strtoupper($_REQUEST['nm_produto']).'%'];            }            if (!empty($_REQUEST['lote'])) {                $where[] = ['mi.lote', 'like', '%'.strtoupper($_REQUEST['lote']).'%'];            }            if ($_REQUEST['cd_sala'] != 0) {                $where[] = ['mi.cd_sala', $_REQUEST['cd_sala']];            }            $data['estoque'] = DB::table('movimentacao as m')                ->leftJoin('movimentacao_itens as mi', 'mi.cd_movimentacao', 'm.cd_movimentacao')                ->leftJoin('produto as p', 'p.cd_produto', 'mi.cd_produto')                ->leftJoin('unidades_comerciais as uc','uc.cd_unidade_comercial','p.cd_unidade_comercial')                ->leftJoin('unidade_medida as um','um.cd_unidade_medida','p.cd_fracao_minima')                ->leftJoin('sala as l', 'l.cd_sala', 'mi.cd_sala')                ->where($where)                ->orWhere($orWhere)                ->select('l.nm_sala', 'mi.cd_produto', 'p.nm_produto',  'mi.lote', 'mi.dt_validade', 'mi.dt_fabricacao', 'p.ds_produto', 'p.fracionamento', 'uc.unidade as nm_unidade_comercial', 'um.abreviacao as nm_unidade_medida', DB::raw("sum(if(m.tp_saldo = 'A',mi.quantidade,if(m.tp_saldo = 'S', - mi.quantidade,0))) as quantidade"))                ->groupBy('l.nm_sala', 'mi.cd_produto', 'p.nm_produto', 'mi.lote', 'mi.dt_validade', 'mi.dt_fabricacao', 'p.ds_produto', 'p.fracionamento', 'uc.unidade', 'um.abreviacao')                ->paginate(30)                ->appends($_REQUEST);        }        $sala = DB::table('sala')->where('cd_estabelecimento',session('estabelecimento'))->where('situacao','A')->where('tipo','E')->orderBy('nm_sala')->get();        $data['sala'][0] = 'TODOS';        foreach($sala as $m){            $data['sala'][$m->cd_sala] = $m->nm_sala;        }        return view('materiais/estoque/lista', $data);    }    public function remover(Request $request){        try {            $data['lista'] = DB::table('sala')->where('cd_sala', '=', $request['cd_sala'])->where('cd_estabelecimento', '=', session()->get('estabelecimento'))->delete();            return redirect($_REQUEST['REFERER']);        } catch(\Illuminate\Database\QueryException $ex){            return redirect($_REQUEST['REFERER']);        }    }}
<?phpnamespace App\Http\Controllers;use App\Mail\mailTeste;use App\Models\User;use Illuminate\Support\Facades\Auth;use Illuminate\Support\Facades\DB;use Illuminate\Http\Request;use Illuminate\Support\Facades\Hash;use Illuminate\Support\Facades\Log;use Illuminate\Support\Facades\Validator;use Illuminate\Validation\Rule;use PhpParser\Node\Expr\Array_;class Salas extends Controller{    public function __construct(){        $this->middleware('auth');        $this->middleware('configuraSessao');        $this->middleware('requestFilter');    }    public function cadastrar($id = null, Request $request){        verficaPermissao('recurso.salas');        $data['headerText'] = 'Cadastro de Salas';        $data['breadcrumbs'][] = ['titulo' => 'Início', 'href' => route('home')];        $data['breadcrumbs'][] = ['titulo' => 'Salas', 'href' => route('salas/lista')];        $data['breadcrumbs'][] = ['titulo' => 'Cadastrar', 'href' => route('salas/cadastro')];        if (!empty($id) && empty($_POST['cd_sala'])) {            $sala = DB::table('sala')->where('cd_sala', $id)->get();            if (isset($sala[0])) {                $array = (array)$sala[0];                $data['sala'] = $array;            }        } else {            $data['sala'] = $_POST;        }        if ($request->isMethod('post')) {            $dados = $request->except(['_token', 'cd_sala']);            $dados = array_map('strtoupper', $dados);            $rules = [                'nm_sala' => 'required|max:100|unique:sala,nm_sala,'.$_POST['cd_sala'].',cd_sala',            ];            $dados['cd_estabelecimento'] = session()->get('estabelecimento');            $validator = Validator::make($dados, $rules);            if ($validator->fails()) {                return view('salas/cadastro', $data)->withErrors($validator);            } else {                if (!empty($id)) {                    DB::table('sala')->where('cd_sala', $id)->update($dados);                } else {                    DB::table('sala')->Insert($dados, 'cd_sala');                    $id = DB::table('sala')->max('cd_sala');                }                $request->session()->flash('status', 'Salvo com sucesso!');                return redirect('salas/cadastro/'.$id);            }        }        return view('salas/cadastro', $data);    }    public function listar(){        verficaPermissao('recurso.salas');        $data['headerText'] = 'Salas';        $data['breadcrumbs'][] = ['titulo' => 'Início', 'href' => route('home')];        $data['breadcrumbs'][] = ['titulo' => 'Salas', 'href' => route('salas/lista')];        if ($_REQUEST) {            $where = [];            if (!empty($_REQUEST['nm_sala'])) {                $where[] = ['nm_sala', 'like', '%'.strtoupper($_REQUEST['nm_sala']).'%'];            }            if (isset($_REQUEST['tipo']) && $_REQUEST['tipo'] != 'T') {                $where[] = ['tipo', $_REQUEST['tipo']];            }            if (isset($_REQUEST['situacao']) && $_REQUEST['situacao'] != 'T') {                $where[] = ['situacao', $_REQUEST['situacao']];            }            $where[] = ['cd_estabelecimento','=',session()->get('estabelecimento')];            $data['lista'] = DB::table('sala')                ->where($where)                ->orderBy('cd_sala')                ->paginate(30)                ->appends($_REQUEST);        }        return view('salas/lista', $data);    }    public function pesquisa_user(){        $retorno = DB::table('users as u')            ->leftJoin('pessoa as p','p.cd_pessoa','u.cd_pessoa')            ->where('p.nm_pessoa', 'like', '%' . $_POST['pesquisa'] . '%')            ->select('u.id','p.nm_pessoa')            ->get();        return json_encode(['success' => true,'dados' => $retorno]);    }    public function remover(equest $request){        try {            $data['lista'] = DB::table('sala')->where('cd_sala', '=', $_POST['cd_sala'])->where('cd_estabelecimento', '=', session()->get('estabelecimento'))->delete();            return redirect($_REQUEST['REFERER']);        } catch(\Illuminate\Database\QueryException $ex){            return redirect($_REQUEST['REFERER']);        }    }}